#!/usr/bin/env bash
# shellcheck source=/dev/null
source utils

information "### Processes & System monitors ###"

cat << EndOfMessage

'htop' >>> Interactive process viewer
'top' >>> Periodically displays a sorted list of system processes
'free -h' >>> Displays the total amount of free and used physical memory
'vmstat' or 'vm_stat' >>> Displays Mach virtual memory statistics
'watch -n <interval> docker ps' >>> Monitor execution of a coommand
'lsof -i -P -n(-euf)' >>> Information about files opened by processes
'ps -afe | grep <service>' >>> Information about all of your processes
'kill -9 <pid>' >>> Terminate process

EndOfMessage

information "### File Manipulations ###"

cat << EndOfMessage

'df <DIRECTORY>' #Display the amount of free space, mounting poind and etc for directory.
'du -ah <folder> | sort -n -r | head -n 10' >>> File sizes In human readable format
'lsblk' >>> View available disk devices and their mount points. Retrieve information related to volumes.
'stat -s <file>' >>> displays information about the file pointed to by file
'find <directory> -name "*.yaml"' >>> Find all the yaml files in the directory
'chown -R \$(id -u):\$(id -g) <folder>' >>> Change the ownership in folder
'tail -f <file> | grep <what looking>' >>> Selectively monitor the file

EndOfMessage

information "### Networking ###"

cat << EndOfMessage

'tcpdump <expression>'  >>> Prints  out a description of the contents of packets on a network
'traceroute -P TCP -p <IP> <host>'  >>> Tracking the route one's packets follow
'netstat -ant(ntpl|nputw|tpln) | grep :<port|name>' >>> Check if port is listening
'nmap -p 80 -sT <IP>' >>> Ping port
'whois -h whois.godaddy.com <DNS>' >>> whois lookup on a specific registrar's server

EndOfMessage

information "### Services ###"

cat << EndOfMessage

'service --status-all' >>> Status of all services.
'systemctl restart|status|enable <service>' >>> Introspect and control the state of the "systemd" system.
'journalctl --no-page -u <service>' >>> Used to query the contents of the systemd

EndOfMessage

information "### SSH ###"

cat << EndOfMessage

'ssh -T <user>@<address>' >>> Test SSH connection
'scp <ssh user and server>:<location-where-to> <location-on-local-machine>' >>> Copy file from server
'scp <file> <ssh-user-and-server>:<location-where-to>' >>> File to be copied to, from, or between different host
'ssh -i <key> -fN -L 9000:<ip>:<port> user@<pub-ip> -4 -g -N' >>> Proxy jump
'ssh -J user-0@ip-jump user-1@ip-target' >> Connect to the 'target host' over 'jump host'

EndOfMessage
